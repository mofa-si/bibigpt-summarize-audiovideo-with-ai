import { OAuthService } from "./OAuthService";
import { OnAuthorizeParams } from "./withAccessToken";
type ClientOptions = {
    clientId: string;
    authorizeUrl: string;
    tokenUrl: string;
};
type BaseProviderOptions = {
    scope: string;
    personalAccessToken?: string;
    refreshTokenUrl?: string;
    onAuthorize?: (params: OnAuthorizeParams) => void;
};
export type ProviderWithDefaultClientOptions = BaseProviderOptions & Partial<ClientOptions>;
export type ProviderOptions = BaseProviderOptions & ClientOptions;
export declare const asanaService: (options: ProviderWithDefaultClientOptions) => OAuthService;
export declare const githubService: (options: ProviderWithDefaultClientOptions) => OAuthService;
export declare const googleService: (options: ProviderOptions) => OAuthService;
export declare const jiraService: (options: ProviderOptions) => OAuthService;
export declare const linearService: (options: ProviderWithDefaultClientOptions) => OAuthService;
export declare const slackService: (options: ProviderOptions) => OAuthService;
export declare const zoomService: (options: ProviderOptions) => OAuthService;
export {};
//# sourceMappingURL=providers.d.ts.map